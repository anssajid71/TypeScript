{
  "info": {
    "title": "Travel Agent Application",
    "version": "1.0.0",
    "description": "API documentation for Travel Agent Application"
  },
  "swagger": "2.0",
  "tags": [
    {
      "name": "User",
      "description": "User related operations"
    },
    {
      "name": "Services",
      "description": "Services related operations"
    }
  ],
  
  "schemes": ["http"],
  "paths": {
    "/user":
     {
      "get": {
        "tags": ["User"],
        "summary": "Get a list of users",
        "description": "Returns a list of users.",
        "responses": {
          "200": {
            "description": "A list of users.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "description": "Creates a new user.",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request. Validation error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get a user by ID",
        "description": "Returns a user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID."
          }
        ],
        "responses": {
          "200": {
            "description": "A user object.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update a user by ID",
        "description": "Updates a user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID."
          },
          {
            "name": "User",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete a user by ID",
        "description": "Deletes a user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID."
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully."
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/signin": {
      "post": {
        "tags": ["User"],
        "summary": "Sign in a user",
        "description": "Signs in a user.",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User signed in successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Invalid Email address."
          }
        }
      }
    }
  },
  
  "/services/signup": {
    "post": {
      "tags": ["Services"],
      "summary": "Create a new service",
      "description": "Creates a new service.",
      "parameters": [
        {
          "name": "Service",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Services"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Service created successfully.",
          "schema": {
            "$ref": "#/definitions/Services"
          }
        },
        "400": {
          "description": "Bad request. Validation error.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "500": {
          "description": "Internal server error.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    },
  "/services/getall": {
    "get": {
      "tags": ["Services"],
      "summary": "Get all services",
      "description": "Retrieves a list of all services.",
      "responses": {
        "200": {
          "description": "List of services retrieved successfully.",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Services"
            }
          }
        },
        "400": {
          "description": "Bad request. Validation error.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "500": {
          "description": "Internal server error.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    },
  
  "definitions": {
    "ID": {
      "type": "integer",
      "format": "int64"
    },
    "User": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "Services": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "package_id": {
          "type": "integer"
        },
        "service_name": {
          "type": "string"
        }
      }
    },
    "Packages": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "start_date": {
          "type": "string"
        },
        "end_date": {
          "type": "string"
        },
        "total_days": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "images": {
          "type": "string"
        },
        "available_seats": {
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "Hotels": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "hotel_name": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "images": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "Companies": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "payment_status": {
          "type": "string"
        }
      }
    },
    "Booking": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "package_id": {
          "type": "integer"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "enum": ["flight", "hotel", "car_rental"]
        },
        "total_number_of_persons": {
          "type": "integer"
        },
        "pickup_location": {
          "type": "string"
        },
        "total_cost": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "enum": ["pending", "confirmed", "canceled"]
        },
        "payment_method": {
          "type": "string"
        },
        "payment_status": {
          "type": "string",
          "enum": ["pending", "completed", "failed"]
        },
        "payment_date": {
          "type": "string"
        }
      }
    },
    "Attachments": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "attachment_id": {
          "type": "integer"
        },
        "attachment_type": {
          "type": "string"
        },
        "attachment_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "required": ["error"]
    }
  },
  "responses": {},
  "parameters": {},
  "securityDefinitions": {}
  }}}