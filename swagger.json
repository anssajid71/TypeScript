{
  "info": {
    "title": "Travel Agent Application",
    "version": "1.0.0",
    "description": "API documentation for Travel Agent Application"
  },
  "basePath": "/user",
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "swagger": "2.0",
  "paths": {
    "/user/signin": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Sign in a user",
        "description": "Signs in a user.",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User signed in successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Invalid Email address or password."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users/getall": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a list of users",
        "description": "Returns a list of users.",
        "responses": {
          "200": {
            "description": "A list of users.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a user by ID",
        "description": "Returns a user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID."
          }
        ],
        "responses": {
          "200": {
            "description": "User found successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a user by ID",
        "description": "Updates a user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID."
          },
          {
            "name": "User",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user by ID",
        "description": "Deletes a user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID."
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "description": "Creates a new user.",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request. Validation error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    }
  },
  "responses": {},
  "parameters": {},
  "tags": []
}